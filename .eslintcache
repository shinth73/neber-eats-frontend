[{"H:\\Github\\nuber-eats-frontend\\src\\App.tsx":"1","H:\\Github\\nuber-eats-frontend\\src\\index.tsx":"2","H:\\Github\\nuber-eats-frontend\\src\\reportWebVitals.ts":"3","H:\\Github\\nuber-eats-frontend\\src\\apollo.ts":"4","H:\\Github\\nuber-eats-frontend\\src\\routers\\rogged-out-router.tsx":"5","H:\\Github\\nuber-eats-frontend\\src\\routers\\rogged-in-router.tsx":"6","H:\\Github\\nuber-eats-frontend\\src\\pages\\login.tsx":"7","H:\\Github\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"8","H:\\Github\\nuber-eats-frontend\\src\\components\\form-error.tsx":"9","H:\\Github\\nuber-eats-frontend\\src\\components\\button.tsx":"10"},{"size":177,"mtime":1609665382473,"results":"11","hashOfConfig":"12"},{"size":669,"mtime":1609665533637,"results":"13","hashOfConfig":"12"},{"size":425,"mtime":1609659649178,"results":"14","hashOfConfig":"12"},{"size":467,"mtime":1610158003424,"results":"15","hashOfConfig":"12"},{"size":499,"mtime":1610163126308,"results":"16","hashOfConfig":"12"},{"size":109,"mtime":1609665432603,"results":"17","hashOfConfig":"12"},{"size":3091,"mtime":1610193762651,"results":"18","hashOfConfig":"12"},{"size":129,"mtime":1610162894834,"results":"19","hashOfConfig":"12"},{"size":252,"mtime":1610168382766,"results":"20","hashOfConfig":"12"},{"size":499,"mtime":1610193747371,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u6ikxl",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\Github\\nuber-eats-frontend\\src\\App.tsx",[],"H:\\Github\\nuber-eats-frontend\\src\\index.tsx",[],["46","47"],"H:\\Github\\nuber-eats-frontend\\src\\reportWebVitals.ts",[],["48","49"],"H:\\Github\\nuber-eats-frontend\\src\\apollo.ts",[],["50","51"],"H:\\Github\\nuber-eats-frontend\\src\\routers\\rogged-out-router.tsx",[],"H:\\Github\\nuber-eats-frontend\\src\\routers\\rogged-in-router.tsx",[],"H:\\Github\\nuber-eats-frontend\\src\\pages\\login.tsx",["52"],"/** @format */\r\n\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport nuberLogo from \"../images/logo.svg\";\r\nimport { loginMutation, loginMutationVariables } from \"../__generated__/loginMutation\";\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation loginMutation($loginInput: LoginInput!) {\r\n    login(input: $loginInput) {\r\n      ok\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const Login = () => {\r\n  const { register, getValues, errors, handleSubmit, formState } = useForm<ILoginForm>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onCompleted = (data: loginMutation) => {\r\n    const {\r\n      login: { ok, token },\r\n    } = data;\r\n    if (ok) {\r\n      console.log(token);\r\n    }\r\n  };\r\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password } = getValues();\r\n      loginMutation({\r\n        variables: {\r\n          loginInput: {\r\n            email,\r\n            password,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={nuberLogo} className=\"w-52 mb-10\" />\r\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">Welcome back</h4>\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"grid gap-3 mt-5 w-full mb-5\">\r\n          <input\r\n            ref={register({ required: \"Email is required\" })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && <FormError errorMessage={errors.email?.message} />}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && <FormError errorMessage={errors.password?.message} />}\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage=\"Password must be more than 10 chars.\" />\r\n          )}\r\n          <Button canClick={formState.isValid} loading={loading} actionText={\"Log in\"} />\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult.login.error} />\r\n          )}\r\n        </form>\r\n        <div>\r\n          New to Nuber?{\" \"}\r\n          <Link to=\"/create-account\" className=\"text-lime-600 hover:underline\">\r\n            Create an Account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","H:\\Github\\nuber-eats-frontend\\src\\pages\\create-account.tsx",[],"H:\\Github\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],"H:\\Github\\nuber-eats-frontend\\src\\components\\button.tsx",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"55","replacedBy":"58"},{"ruleId":"53","replacedBy":"59"},{"ruleId":"55","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":61,"column":9,"nodeType":"63","endLine":61,"endColumn":55},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],["64"],["65"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]